{"name":"Roku","tagline":"CoreData's concurrent stacks made easy.","body":"> Warning:\r\n> This project is currently in development.\r\n\r\n# Roku ([六](https://en.wiktionary.org/wiki/六#Numeral))\r\n\r\nCoreData's concurrent stacks made easy.\r\n\r\n> Inspired by\r\n> [Concurrent Core Data Stacks][Performance] article,\r\n> [WWDC2013 Session 211][HighPerformance]\r\n> and [Seru][Seru] CoreData stack by [@kostiakoval][User].\r\n\r\n## Usage\r\n\r\nInitialize `StorageModel` (see also: [StorageModel.md][StorageModel.md])\r\n\r\n```swift\r\nfunc newPersistentStoreCoordinator() -> NSPersistentStoreCoordinator {\r\n    // Create and return new persistent store coordinator\r\n}\r\n\r\nlet storage = StorageModel(persistentStoreCoordinator: newPersistentStoreCoordinator)\r\n```\r\n\r\n\r\nInitialize `Roku` stack (see also: [Roku.md][Roku.md]) with a base stack\r\n\r\n```swift\r\nlet baseStack = Roku<BaseStack>(storage: storage)\r\n```\r\n\r\nor with a nested stack\r\n\r\n```swift\r\nlet nestedStack = Roku<NestedStack>(storage: storage)\r\n```\r\n\r\nor with an independent stack.\r\n\r\n```swift\r\nlet independentStack = Roku<IndependentStack>(storage: storage)\r\n```\r\n\r\nEnjoy `Roku`'s features :tada:\r\n\r\n```swift\r\nstack.mainObjectContext // Main queue managed object context\r\n\r\nstack.withBackgroundContext { context in\r\n    // Do heavy import operations on the background context\r\n}\r\n\r\nstack.persist { error -> Bool in\r\n    // Handle an error and try fixing it\r\n    \r\n    // If error was successfully fixed, \r\n    // `Roku` will repeat save.\r\n    return errorHandled && errorFixed\r\n}\r\n```\r\n\r\n## TODO\r\n- [x] Implement observable NSManagedObjectContext.\r\n- [x] Implement templates and default implementations.\r\n- [ ] Implement all functionality of `Roku` class.\r\n- [ ] Finish writing README.md file.\r\n- [ ] Add examples of custom stack templates and implementations.\r\n- [ ] Feature: implement manager for stack with multiple persistent store coordinators.\r\n- [ ] Write unit tests.\r\n\r\n## License\r\n\r\n```\r\nThe MIT License (MIT)\r\n\r\nCopyright © 2015 Ivan Trubach\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n[User]:            https://github.com/kostiakoval\r\n[Seru]:            https://github.com/kostiakoval/Seru\r\n\r\n[Performance]:     http://floriankugler.com/2013/04/29/concurrent-core-data-stack-performance-shootout/\r\n[HighPerformance]: https://developer.apple.com/videos/play/wwdc2013-211/\r\n\r\n[StorageModel.md]: Docs/StorageModel.md\r\n[Roku.md]:         Docs/Roku.md\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}